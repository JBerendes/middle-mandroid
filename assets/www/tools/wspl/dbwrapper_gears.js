/*
  Copyright 2009 Google Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/
/**
 * @fileoverview A Gears implementation of dbwrapperapi Database.
 *
 * This implementation locks database access upon invoking the transaction's
 * populate callback.  Statements are then asynchronously sent to a worker
 * thread for execution.
 */
/**
 * @see google.wspl.Database#Database
 * @param {boolean} opt_sync Perform all callbacks synchronously.
 * @constructor
 * @extends google.wspl.Database
 */
google.wspl.gears.Database=function(e){google.wspl.Database.call(this),this.synchronous_=!!e},google.inherits(google.wspl.gears.Database,google.wspl.Database),google.wspl.gears.Database.TIMEOUT=6e4,google.wspl.gears.Database.prototype.workerTimeout_=!1,google.wspl.gears.Database.prototype.workerReady_=!1,google.wspl.gears.Database.prototype.useWorker_=!1,google.wspl.gears.Database.prototype.userId_,google.wspl.gears.Database.prototype.name_,google.wspl.gears.Database.prototype.transactions_={},google.wspl.gears.Database.prototype.queuedTransactions_=[],google.wspl.gears.Database.prototype.locked_=!1,google.wspl.gears.Database.prototype.transCount_=1,google.wspl.gears.Database.prototype.currentTransactionId_,google.wspl.gears.Database.prototype.wp_,google.wspl.gears.Database.prototype.workerId_,google.wspl.gears.Database.prototype.db_,google.wspl.gears.Database.prototype.openDatabase=function(e,t,n){this.db_?google.logger("openDatabase already invoked."):(this.db_=n,this.userId_=e,this.name_=t,google.wspl.GearsUtils.openDatabase(e,t,this.db_,google.logger))},google.wspl.gears.Database.prototype.startWorker=function(e,t){return this.wp_=e,google.logger("Starting dbworker thread."),this.workerId_=e.createWorkerFromUrl(t),this.timeoutId_=window.setTimeout(google.bind(this.handleTimeout_,this),google.wspl.gears.Database.TIMEOUT),this.workerId_},google.wspl.gears.Database.prototype.createTransaction=function(e,t){var n=t||{onSuccess:function(){},onFailure:function(){}},r=this.transCount_++,i=new google.wspl.gears.Transaction(r,this);this.saveTransaction_(i,n,e),this.queuedTransactions_.push(i.id_),this.nextTransaction_()},google.wspl.gears.Database.prototype.saveTransaction_=function(e,t,n){this.transactions_[e.id_]={transaction:e,callback:t,populate:n}},google.wspl.gears.Database.prototype.onMessage_=function(e,t,n){var r=n.body;try{switch(r.type){case google.wspl.gears.DbWorker.ReplyTypes.RESULT:this.handleResult_(r.results,r.callbackId,r.transactionId);break;case google.wspl.gears.DbWorker.ReplyTypes.FAILURE:this.handleFailure_(r.error,r.callbackId,r.transactionId);break;case google.wspl.gears.DbWorker.ReplyTypes.COMMIT:this.handleCommit_(r.transactionId);break;case google.wspl.gears.DbWorker.ReplyTypes.ROLLBACK:this.handleRollback_(r.transactionId);break;case google.wspl.gears.DbWorker.ReplyTypes.STARTED:this.handleStarted_();break;case google.wspl.gears.DbWorker.ReplyTypes.OPEN_SUCCESSFUL:this.handleOpenSuccessful_();break;case google.wspl.gears.DbWorker.ReplyTypes.OPEN_FAILED:this.handleOpenFailed_(r.error);break;case google.wspl.gears.DbWorker.ReplyTypes.LOG:google.logger(r.msg)}}catch(i){google.logger("Gears database failed: "+i.message,i)}},google.wspl.gears.Database.prototype.doOpen=function(e,t){this.sendMessageToWorker_({type:google.wspl.gears.DbWorker.CommandTypes.OPEN,name:t,userId:e})},google.wspl.gears.Database.prototype.doBegin=function(e){if(!this.useWorker_){this.db_.execute("BEGIN IMMEDIATE");return}this.sendMessageToWorker_({type:google.wspl.gears.DbWorker.CommandTypes.BEGIN,transactionId:e})},google.wspl.gears.Database.prototype.doCommit=function(e){if(!this.useWorker_){this.db_.execute("COMMIT"),this.postCommit_();return}this.sendMessageToWorker_({type:google.wspl.gears.DbWorker.CommandTypes.COMMIT,transactionId:e})},google.wspl.gears.Database.prototype.doRollback=function(e){if(!this.useWorker_){this.db_.execute("ROLLBACK"),this.postRollback_();return}this.sendMessageToWorker_({type:google.wspl.gears.DbWorker.CommandTypes.ROLLBACK,transactionId:e})},google.wspl.gears.Database.prototype.doExecute=function(e,t,n){if(!this.useWorker_){this.doExecuteSynchronously_(e,t,n);return}var r=[];for(var i=0;i<e.length;i++)r[i]={sql:e[i].sql,params:e[i].params};this.sendMessageToWorker_({type:google.wspl.gears.DbWorker.CommandTypes.EXECUTE,statements:r,callbackId:t,transactionId:n})},google.wspl.gears.Database.prototype.doExecuteSynchronously_=function(e,t,n){function c(){r.handleResult_(i,t,n)}var r=this,i=[];for(var s=0;s<e.length;s++)try{var o=this.db_.execute(e[s].sql,e[s].params),u=google.wspl.GearsUtils.resultSetToObjectArray(o);i.push(u)}catch(a){var f=a;function l(){r.handleFailure_(f,t,n)}this.setTimeout_(l,0);return}this.setTimeout_(c,0)},google.wspl.gears.Database.prototype.handleResult_=function(e,t,n){var r=this.transactions_[n];if(r)for(var i=0,s=e.length;i<s;i++){var o=new google.wspl.gears.ResultSet(e[i]);r.transaction.success(o,t)}},google.wspl.gears.Database.prototype.handleFailure_=function(e,t,n){var r=this.transactions_[n];r&&(r.error=e,r.transaction.failure(e,t))},google.wspl.gears.Database.prototype.handleCommit_=function(e){var t=this.removeTransaction_(e);t&&t.callback.onSuccess(),this.nextTransaction_()},google.wspl.gears.Database.prototype.postCommit_=function(){this.handleCommit_(this.currentTransactionId_)},google.wspl.gears.Database.prototype.handleRollback_=function(e){var t=this.removeTransaction_(e);t&&t.callback.onFailure(t.error),this.nextTransaction_()},google.wspl.gears.Database.prototype.postRollback_=function(){this.handleRollback_(this.currentTransactionId_)},google.wspl.gears.Database.prototype.handleStarted_=function(){this.workerTimeout_||(google.logger("Dbworker started."),window.clearTimeout(this.timeoutId_),this.timeoutId_=0,this.doOpen(this.userId_,this.name_))},google.wspl.gears.Database.prototype.handleTimeout_=function(){this.workerTimeout_=!0,google.logger("Timed out while waiting for the dbworker to start.")},google.wspl.gears.Database.prototype.handleOpenSuccessful_=function(){this.workerReady_=!0},google.wspl.gears.Database.prototype.handleOpenFailed_=function(e){google.logger("Worker failed to open Gears database.")},google.wspl.gears.Database.prototype.nextTransaction_=function(){if(this.queuedTransactions_.length&&!this.locked_){this.locked_=!0,this.workerReady_&&!this.useWorker_&&(this.useWorker_=!0,google.logger("Switching to asynchronous database interface."));var e=this.queuedTransactions_.shift();this.currentTransactionId_=e;var t=this.transactions_[e],n=this;function r(){t.populate(t.transaction),t.transaction.isExecuting()||n.handleCommit_(e)}this.setTimeout_(r,0)}},google.wspl.gears.Database.prototype.removeTransaction_=function(e){this.locked_=!1;var t=this.transactions_[e];return t&&delete this.transactions_[e],t},google.wspl.gears.Database.prototype.setTimeout_=function(e,t){this.synchronous_?e():window.setTimeout(e,t)},google.wspl.gears.Database.prototype.sendMessageToWorker_=function(e){this.wp_.sendMessage(e,this.workerId_)};